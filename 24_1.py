# В этих задачах анализируем соседние символы, т.е. a[i],a[i+1], Весь остальной код не отличается.
# У нас есть какое-то условие на подстроку. Мы идем по строке и проверяем соседние символы. Если они подходят по условию,
# то увеличиваем счетчик на один. Если не подходят. То сверяем счетчик с максимумом.
# Например у нас есть строка: "абббаабааааббб" А нужно найти максимальную подстоку с повторяющемися символами.
# Тогда мы идем по строке и сравниваем символы. Вначале запишем в максимум длину строки "а", дальше "ббб", потом "aaaa"



# Текстовый файл состоит не более чем из 106 символов X, Y и Z. 
# Определите максимальное количество идущих подряд символов, 
# расположенных в алфавитном порядке (возможно с повторением символов). 
# Для выполнения этого задания следует написать программу. 


# Алфавитный порядок на языке програмирования - код следующего символа больше чем предыдущего
# ord("X") = 88; ord("Y") = 89; ord("Z") = 90
# Нам подходят все подстроки где X перед Y, а Z после.

file = open("24.txt")
a = file.readline()    # считали весь файл в строку
count = 1              # переменная для текущей длинны
maximum = 1            # переменная для максимальной длинны
for i in range(len(a) - 1):  # если проверяем два символа то len(a) - 1
    if ord(a[i]) <= ord(a[i+1]): # проверка на алфавитный порядок символов
        count += 1
    # если у нас символы больше не в алфавитном порядке то подстрока закончилась.
    # стравниваем длины и обнуляем переменную для длины подстроки.
    else:
        maximum = max(maximum, count) # находим новый максимум
        count = 1
maximum = max(maximum, count) #учитываем возможность найти искомую подстроку в самом конце файла
print(maximum)
file.close()


##################################################################################################################################


# Текстовый файл состоит не более чем из 106 арабских цифр {0, 1, …, 9}.    
# Определите максимальное количество идущих подряд чётных цифр (включая нуль).  
# Для выполнения этого задания следует написать программу.  


file = open('24.txt')
count = 0
maximum = 0
for i in range(len(a)):
    if int(a[i]) % 2 == 0:
        count += 1
    else:
        maximum = max(maximum, count)
        count = 0
maximum = max(maximum, count)
print(maximum)
file.close()

##################################################################################################################################

# Текстовый файл состоит не более чем из 10^6 символов X, Y и Z. 
# Определите максимальное количество идущих подряд символов, среди которых каждые два соседних различны. 
# Для выполнения этого задания следует написать программу. 

file = open('24.txt')
a = file.readline()
count = 1
maximum = 1
for i in range(len(a) - 1):
    if a[i] != a[i+1]:
        count += 1
    else:
        maximum = max(maximum, count)
        count = 1
maximum = max(maximum, count)
print(maximum)
file.close()

######################################################################################################################################

# Текстовый файл состоит не более чем из 106 символов K, L и M. Определите максимальную 
# длину цепочки вида KLKL… (составленной из фрагментов KL, последний фрагмент может быть 
# неполным). Для выполнения этого задания следует написать программу.

# Условие на подстроку KLKL, она продолжается если:
# 1. a[i] == "K", тогда следующий символ должен быть "L"
# 2. a[i] == "L", тогда следующий символ должен быть "K" , при этом у нас "L" не может быть первым символом(строка начинается с K)
 

file = open('24.txt')
a = file.readline()
count = 1
maximum = 1
for i in range(len(a) - 1):
    if (a[i] == 'K' and a[i + 1] == 'L') or (a[i] == 'L' and a[i + 1] == 'K' and count != 1):
        count += 1
    else:
        maximum = max(maximum, count)
        count = 1
maximum = max(maximum, count)
print(maximum)
file.close()


######################################################################################################################################

# Текстовый файл состоит не более чем из 106 символов 4, 5, 6, A, B, C (буквы латинские).
# Определите максимальное количество идущих подряд символов, среди которых никакие две буквы и никакие две цифры не стоят рядом.
# Для выполнения этого задания следует написать программу.

# Для проверки символа на букву/цифру мы могли бы пользоваться функцией ord()
# Но можно пользоваться встроенными методами .isdigit() .isalpha() 

file = open("1.txt")
a = file.readline()
l = 1
max_l = 1
for i in range(len(a) - 1):
    if a[i].isdigit() and not a[i + 1].isdigit():
        l += 1
        max_l = max(l, max_l)
    elif a[i].isalpha() and not a[i + 1].isalpha():
        l += 1
        max_l = max(l, max_l)
    else:
        l = 1
print(max_l)
file.close()




