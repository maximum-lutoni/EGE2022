# Для перевозки партии грузов различной массы выделен грузовик, но его грузоподъёмность ограничена, поэтому перевезти сразу все грузы не удастся. 
# Грузы массой от 175 до 275 кг грузят в первую очередь. На оставшееся после этого место стараются взять как можно больше грузов. 
# Если это можно сделать несколькими способами, выбирают тот способ, при котором самый большой из выбранных грузов имеет наибольшую массу. 
# Если и при этом условии возможно несколько вариантов, выбирается тот, при котором наибольшую массу имеет второй по величине груз, и т. д.
# Известны количество грузов, масса каждого из них и грузоподъёмность грузовика. Необходимо определить количество и общую массу грузов, 
# которые будут вывезены при погрузке по вышеописанным правилам.

# Входные данные
# Первая строка входного файла содержит два целых числа: N — общее количество грузов и M — грузоподъёмность грузовика в кг.
# Каждая из следующих N строк содержит одно целое число — массу груза в кг.

# В ответе запишите два целых числа: сначала максимально возможное количество грузов, затем их общую массу.

""" Усложненая версия задания 26_2
    Что поменялось. Нам нужно:
    1. Отобрать грузы весом от 175 до 275 кг.
    2. На оставшееся место распределить максимальное количество грузов.
    3. Заменить некоторые грузы, чтобы максимально заполнить вес общего груза 
    
    Таким образом поскольку грузы 175 - 275 должны все влезть просто закидываем их вв грузовик и дальше не учитываем."""

# Инициализация данных
f = open("26.txt")          # открываем файл
l = f.readline().split(' ') # читаем первую строку с двумя числами
N = int(l[0])    # общее количество грузов
M = int(l[1])    # грузоподъёмность грузовика
count = 0        # максимально возможное количество грузов
s = 0            # общая масса
a = []           # массив для хранения масс грузов
for i in range(N):
    x = int(f.readline()) # читаем массу текущего груза
    if 175 <= x <= 275 and s + x <= M : # если масса в пределах от 175 до 275
        s += x       # то сразу учитываем ее в общей массе
        count += 1   # и увеличиваем количество грузов
    else:
        a.append(x)  # иначе сохраняем для дальнейшей обработки
a.sort() # сортируем полученный массив по возрастанию
k = 0    # пременная для индекса среза

# Загружаем грузовик в цикле for
for i in range(len(a)):
    if s + a[i] <= M: # если текущий груз входит в общую массу
        s += a[i]     # то добавляем его
        count += 1    # и учитываем в количестве
    else:
        k = i # иначе запоминаем индекс первого не вошедшего груза
        break

# Пытаемся максимизировать вес груза
b = a[:k] # формируем массив из неиспользованных грузов
a.sort(reverse = True)  # сортируем массив по убыванию
for i in range(len(b)): # перебираем элементы массива неиспользованных грузов
    if M == s: # если грузоподъемность равна текущей общей массе
        break  # то машина полностью загружена
    s -= b[i]  # убираем текущий элемент из суммы
    for j in range(len(a)):  # внутри перебираем элементы масс грузов
        if a[j] <= M - s: # если текущая масса не больше разницы грузоподъемности и общей массы
            s += a[j] # добавляем ее в общую сумму
            break
print(count, s) # выводим максимальное количество грузов и общую массу