""" Задачи на сортировку 
   Метод sort()  sorted() """

# Васе необходимо перенести данные с одного компьютера на другой. Для этого он использует внешний жесткий диск. 
# Однако объём диска может быть меньше, чем суммарный объём всех файлов на первом компьютере. Известно, какой 
# объём занимает каждый файл и объем диска. 

# В первой строке входного файла находятся два числа: S — размер свободного места на диске (натуральное число, не превышающее 10 000)
# и N — количество пользователей (натуральное число, не превышающее 5000). В следующих N строках находятся значения объёмов файлов 
# (все числа натуральные, не превышающие 300), каждое в отдельной строке.

#   А) По заданной информации об объёме файлов и свободном объёме на внешнем диске определите максимальное число файлов, 
#   которое можно перенести на внешний диск за один раз;
#   Б) Также определите максимальный размер файла, который может быть перенесен на внешний диск, при условии, что на диске
#   переносится максимальное количество файлов.


# Подготовка данных
f = open("26.txt")
l = f.readline().split(' ')
S = int(l[0])
N = int(l[1])
a = [int(f.readline()) for i in range(N)]
a.sort()
p = S      # место на диске
c = 0      # количество файлов

"""    Задача на жадный алгоритм:
    Нужно запихивать файлы в порядке возрастания на диск пока он не кончится. Таким образом добиваемся 
    максимального колличества файлов. А когда закончится диск последний добавленный файл(максимальный из добавленных)
    будем пытаться увеличить. То есть вычитаем его и добавляем максимально возможный"""

for i in range(N):
    if p - a[i] < 0:    # Добавляем пока есть место на диске. Если оно кончилось прерываем цикл.
        break
    c += 1              # Cчитакм добавленные файлы
    p -= a[i]           # Уменьшаем диск на размер файла
print(c)

# Осталось разобраться с последним файлом сделав его максимальным
s = S - sum(a[0:c-1])   # Размер диска перед добавлением последнего файла (насколько большой файл мы можем добавить последним)
a.sort(reverse=True)    # Сортируем массив файлов в порядке убывания 
for i in range(N):
    if a[i] <= s:       # Из за сортировки первый встретившийся файл, который влезет на диск будет максимальным
        print(a[i])
        break



